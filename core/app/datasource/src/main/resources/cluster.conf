#
# Copyright (c) 2020-present SMC Treviso s.r.l. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

pekko {
  actor.provider = cluster

  remote.artery {
    canonical.port = 2551
    advanced {
      maximum-frame-size = 100 MiB
      maximum-large-frame-size = 200 MiB
    }
  }

  cluster {
    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"

    shutdown-after-unsuccessful-join-seed-nodes = 120s

    sharding {
      least-shard-allocation-strategy.rebalance-absolute-limit = 20
      passivation.strategy = default-strategy
    }
    coordinated-shutdown.exit-jvm = on
  }
}

pekko.management {
  http {
    port = 8558
    port = ${?HTTP_MGMT_PORT}
    bind-hostname = 0.0.0.0
    bind-port = 8558
  }
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = 1
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }
}

pekko.discovery {
  kubernetes-api {
    # in fact, this is already the default:
    pod-label-selector = "app=%s"
  }
}