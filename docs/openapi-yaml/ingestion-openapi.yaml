---
openapi: 3.1.0
info:
  contact:
    email: dev@openk9.io
    name: OpenK9 Support
  description: API to ingest data from external sources inside Openk9.
  license:
    name: GNU Affero General Public License v3.0
    url: https://github.com/smclab/openk9/blob/main/LICENSE
  title: Ingestion Service
  version: 3.1.0-SNAPSHOT
components:
  responses:
    bad-request:
      description: Bad Request
      content:
        application/json+problem:
          schema:
            $ref: "#/components/schemas/Problem"
            externalDocs:
              description: More Info here
              url: https://opensource.zalando.com/problem
    internal-server-error:
      description: Internal Server Error
      content:
        application/json+problem:
          schema:
            $ref: "#/components/schemas/Problem"
            externalDocs:
              description: More Info here
              url: https://opensource.zalando.com/problem
    not-found:
      description: Not found
      content:
        application/json+problem:
          schema:
            $ref: "#/components/schemas/Problem"
            externalDocs:
              description: More Info here
              url: https://opensource.zalando.com/problem
  schemas:
    BinaryDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique string that identifies by datasource the binary inside
            Openk9.
        name:
          type: string
          description: Name associated with binary resource.
        contentType:
          type: string
          description: Content Type of the binary resource.
        data:
          type: string
          format: byte
          description: Base64 encoded string of binary resource.
        resourceId:
          type: string
          format: uuid
          description: Unique id that identifies the binary inside Openk9.
    IngestionDTO:
      type: object
      properties:
        datasourceId:
          type: integer
          format: uuid
          description: Unique id that identifies the datasource the ingested message
            belongs to.
        tenantId:
          type: string
          format: uuid
          description: Unique string that identifies the tenant the ingested message
            belongs to.
        contentId:
          type: string
          format: uuid
          description: Unique id by datasource that identifies the resource inside
            Openk9.
        parsingDate:
          type: integer
          format: date
          description: Date when scheduling associated with message is started.
        rawContent:
          type: string
          description: Message raw content. Can be used to perform some elaboration
            or enrichment inside Openk9 pipeline.
        datasourcePayload:
          type: object
          additionalProperties: {}
        resources:
          $ref: "#/components/schemas/ResourcesDTO"
          type: object
          description: Object to pass resources associated with message.
        acl:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Object to pass access control list associated with message.
        scheduleId:
          type: string
          format: uuid
          description: Unique string that identifies the scheduling the ingested message
            belongs to.
        last:
          type: boolean
          description: Specify if it is the last message of scheduling.
        type:
          $ref: "#/components/schemas/PayloadType"
          type: string
          description: String used to specify type associated with message. Default
            is DOCUMENT for message. HALT is used when a message to stop scheduling
            arrived.
    PayloadType:
      type: string
      enum:
      - DOCUMENT
      - LAST
      - HALT
    Problem:
      type: object
      description: Problem details for HTTP APIs (rfc7807)
      properties:
        type:
          type: string
          format: uri
          description: An absolute URI that identifies the problem type.
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
          description: An absolute URI that identifies the specific occurrence of
            the problem.
    ResourcesDTO:
      type: object
      properties:
        binaries:
          type: array
          items:
            $ref: "#/components/schemas/BinaryDTO"
          description: List of objects containing binaries.
        splitBinaries:
          type: boolean
          description: Specify if multiple binaries must be splitted up in differente
            messages.
tags:
- name: Ingestion API
  description: Permits to ingest data and associated resources inside Openk9 and perform
    elaboration and indexing.
paths:
  /api/ingestion/v1/ingestion:
    post:
      operationId: ingestion
      tags:
      - Ingestion API
      requestBody:
        content:
          application/json:
            examples:
              Simple ingestion payload:
                value:
                  datasourceId: 12
                  tenantId: tenantId
                  contentId: 12fs4e3cds3ew32
                  parsingDate: 1743007437740
                  rawContent: string
                  datasourcePayload:
                    additionalProp1: string
                    additionalProp2: string
                    additionalProp3: string
                  scheduleId: bf988b9c-92a2-4a44-9558-5ebeb94c790e
              Ingestion payload passing resources and binaries:
                value:
                  datasourceId: 12
                  tenantId: tenantId
                  contentId: 12fs4e3cds3ew32
                  parsingDate: 1743007437740
                  rawContent: string
                  datasourcePayload:
                    additionalProp1: string
                    additionalProp2: string
                    additionalProp3: string
                  resources:
                    binaries:
                    - id: "123"
                      name: document.pdf
                      contentType: application/pdf
                      data: ZG9jdW1lbnQucGRm
                      resourceId: string
                  scheduleId: 0187185e-c370-4959-b3ee-7c1dfbce5e56
              Ingestion payload passing access control list on data:
                value:
                  datasourceId: 12
                  tenantId: tenantId
                  contentId: 12fs4e3cds3ew32
                  parsingDate: 1743007437740
                  rawContent: string
                  datasourcePayload:
                    additionalProp1: string
                    additionalProp2: string
                    additionalProp3: string
                  acl:
                    rolesName:
                    - admin
                    - viewer
                    - guest
                  scheduleId: string
            schema:
              $ref: "#/components/schemas/IngestionDTO"
        required: true
      responses:
        "200":
          description: Ingestion successful
          content:
            application/json:
              example: {}
              schema: {}
        "404":
          $ref: "#/components/responses/not-found"
        "400":
          $ref: "#/components/responses/bad-request"
        "500":
          $ref: "#/components/responses/internal-server-error"
      summary: Ingestion
