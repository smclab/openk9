openapi: 3.0.1
info:
  title: openk9-connector
  version: 3.0.0-SNAPSHOT
paths:
  /invoke:
    post:
      tags:
        - Invoke API
      description: Invoca il connettore per iniziare l'ingestion
      operationId: invoke
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/InvokeRequest"
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /sample:
    get:
      tags:
        - Sample API
      description: Chiedi al connettore un sample dei documenti che invier√†
      operationId: sample
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/IngestionDTO"
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /health:
    get:
      tags:
        - Health API
      description: Chiedi al connettore il suo stato di salute
      operationId: health
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Health"
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /form:
    get:
      tags:
        - Form API
      description: Chiedi al connettore le specifiche che possono essere configurate da OpenK9
      operationId: form
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Form"
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
components:
  schemas:
    Health:
      type: object
      properties:
        status:
          type: string
          enum: [ "UP", "DOWN", "UNKNOWN" ]
    Form:
      type: object
      properties:
        formFields:
          type: array
          items:
            $ref: "#/components/schemas/FormField"
    FormField:
      type: object
      properties:
        info:
          type: string
        label:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ 'string', 'number', 'date' ]
        size:
          type: number
        required:
          type: boolean
        values:
          type: array
          items:
            $ref: "#/components/schemas/FieldValue"
        validator:
          type: object
          $ref: "#/components/schemas/FormFieldValidator"
    FieldValue:
      type: object
      properties:
        value: {}
        isDefault:
          type: boolean
    FormFieldValidator:
      type: object
      properties:
        min:
          type: integer
          format: int64
        max:
          type: integer
          format: int64
        regex:
          type: string
    InvokeRequest:
      type: object
      properties:
        datasourceId:
          type: integer
          format: int64
        scheduleId:
          type: string
        tenantId:
          type: string
        timestamp:
          type: integer
          format: int64
        jsonConfig:
          type: object
          additionalProperties: { }
    BinaryDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique string that identifies by datasource the binary inside
            Openk9.
        name:
          type: string
          description: Name associated with binary resource.
        contentType:
          type: string
          description: Content Type of the binary resource.
        data:
          type: string
          format: byte
          description: Base64 encoded string of binary resource.
        resourceId:
          type: string
          format: uuid
          description: Unique ID that identifies the binary inside Openk9.
    IngestionDTO:
      type: object
      properties:
        datasourceId:
          type: integer
          format: int64
          description: Unique ID that identifies the datasource the ingested message
            belongs to.
        tenantId:
          type: string
          format: uuid
          description: Unique string that identifies the tenant the ingested message
            belongs to.
        contentId:
          type: string
          format: uuid
          description: Unique ID by datasource that identifies the resource inside
            Openk9.
        parsingDate:
          type: integer
          format: date
          description: Date when scheduling associated with message is started.
        rawContent:
          type: string
          description: Message raw content. Can be used to perform some elaboration
            or enrichment inside Openk9 pipeline.
        datasourcePayload:
          type: object
          additionalProperties: { }
        resources:
          $ref: "#/components/schemas/ResourcesDTO"
          type: object
          description: Object to pass resources associated with message.
        acl:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Object to pass access control list associated with message.
        scheduleId:
          type: string
          format: uuid
          description: Unique string that identifies the scheduling the ingested message
            belongs to.
        last:
          type: boolean
          deprecated: true
          description: Specify if it is the last message of scheduling. (Deprecated, see 'type' property)
        type:
          $ref: "#/components/schemas/PayloadType"
          type: string
          description: String used to specify type associated with message. Default
            is DOCUMENT for message. HALT is used when a message to stop scheduling
            arrived.
    PayloadType:
      type: string
      enum:
        - DOCUMENT
        - LAST
        - HALT
    ResourcesDTO:
      type: object
      properties:
        binaries:
          type: array
          items:
            $ref: "#/components/schemas/BinaryDTO"
          description: List of objects containing binaries.
        splitBinaries:
          type: boolean
          description: Specify if multiple binaries must be split up in differente
            messages.